#BlueJ class context
comment0.params=
comment0.target=SinglyLinkedList()
comment0.text=\n\ \ Constructor\ for\ the\ SinglyLinkedList\ object\n\ \ Generates\ an\ empty\ list.\n
comment1.params=
comment1.target=boolean\ isEmpty()
comment1.text=\n\ \ Returns\ true\ if\ this\ list\ contains\ no\ elements.\n\n\ @return\ \ \ \ true\ iff\ the\ list\ is\ empty\n
comment10.params=
comment10.target=void\ printList()
comment10.text=\n\ \ Prints\ all\ the\ elements\ of\ the\ list\n
comment11.params=
comment11.target=void\ printBackwards()
comment11.text=\n\ \ Prints\ all\ the\ elements\ of\ the\ list\ in\ reverse\ order\n
comment12.params=temp
comment12.target=void\ printBackwards(ListNode)
comment12.text=\n\ \ Recursive\ helper\ method\ to\ print\ all\ the\ elements\ of\n\ \ the\ list\ in\ reverse\ order\n
comment13.params=
comment13.target=void\ clear()
comment13.text=\n\ \ Removes\ all\ of\ the\ elements\ from\ this\ list.\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ \ Returns\ a\ string\ representation\ of\ this\ list.\ The\ string\n\ \ representation\ consists\ of\ the\ list's\ elements\ in\ order,\n\ \ enclosed\ in\ square\ brackets\ ("[]").\ Adjacent\ elements\ are\n\ \ separated\ by\ the\ characters\ ",\ "\ (comma\ and\ space).\n\n\ @return\ \ \ \ Description\ of\ the\ Returned\ Value\n
comment2.params=
comment2.target=java.lang.Object\ getFirst()
comment2.text=\n\ \ Returns\ the\ first\ element\ in\ this\ list.\n\n\ @return\ \ the\ first\ element\ in\ the\ linked\ list.\n
comment3.params=element
comment3.target=void\ addFirst(java.lang.Object)
comment3.text=\n\ \ Inserts\ the\ given\ element\ at\ the\ beginning\ of\ this\ list.\n\n\ @param\ \ element\ \ the\ element\ to\ be\ inserted\ at\ the\ beginning\ of\ this\ list.\n
comment4.params=
comment4.target=java.lang.Object\ getLast()
comment4.text=\n\ \ Returns\ the\ last\ element\ in\ this\ list.\n\n\ @return\ \ the\ last\ element\ in\ the\ linked\ list.\n
comment5.params=element
comment5.target=void\ addLast(java.lang.Object)
comment5.text=\n\ \ Adds\ and\ object\ to\ the\ end\ of\ the\ list\n\n\ @param\ \ element\ \ adds\ element\ to\ end\ of\ list\n
comment6.params=element
comment6.target=void\ insert(java.lang.Comparable)
comment6.text=\n\ \ Inserts\ the\ specified\ element\ at\ the\ position\ in\ this\ list\n\ \ according\ to\ the\ natural\ ordering\ of\ its\ elements.\ All\ elements\n\ \ in\ the\ list\ must\ implement\ the\ Comparable\ interface.\ Shifts\n\ \ the\ element\ currently\ at\ that\ position\ (if\ any)\ and\ any\n\ \ subsequent\ elements\ to\ the\ right.\n\n\ @param\ \ element\ \ element\ to\ be\ inserted\n
comment7.params=element
comment7.target=java.lang.Object\ find(java.lang.Comparable)
comment7.text=\n\ \ Returns\ the\ first\ occurrence\ of\ the\ specified\ element,\ or\ null\n\ \ if\ the\ List\ does\ not\ contain\ this\ element.\n\n\ @param\ \ element\ \ element\ to\ search\ for.\n\ @return\ \ \ \ \ \ \ \ first\ occurrence\ of\ the\ specified\ element,\ or\ null\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ the\ list\ doesn\ not\ contain\ the\ element.\n
comment8.params=element
comment8.target=java.lang.Object\ remove(java.lang.Object)
comment8.text=\n\ \ Removes\ the\ first\ occurrence\ of\ the\ specified\ element\ in\n\ \ this\ list.\ If\ the\ list\ does\ not\ contain\ the\ element,\ it\n\ \ is\ unchanged.\n\n\ @param\ \ element\ \ element\ to\ be\ removed\ from\ this\ list,\ if\ present.\n\ @return\ \ \ \ \ \ \ \ \ \ removes\ first\ element\ with\ matching\ element,\ if\ any.\n
comment9.params=
comment9.target=int\ size()
comment9.text=\n\ \ Returns\ the\ number\ of\ elements\ in\ this\ list.\n\n\ @return\ \ \ \ number\ of\ elements\ in\ this\ list.\n
numComments=15
