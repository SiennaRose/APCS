#BlueJ class context
comment0.target=Humanities
comment0.text=\r\n\ This\ class\ is\ after\ the\ Math\ Class.\r\n\ The\ player\ will\ have\ to\ try\ to\ find\ the\ answer\ to\ the\ riddle\ in\ order\ to\ proceed\ to\ the\ next\ class\r\n\ There\ are\ a\ lot\ of\ JButtons\ as\ well\ as\ Panel,\ and\ Frame\ used\ in\ order\ to\ build\ this\ class.\r\n\ MouseMotionListener,\ MouseListener,\ and\ ActionListener\ detects\ what\ the\ user\ does\ in\ the\ class\ that\ will\ solve\ the\ problem.\r\n\ @author\ Yeonjae\ Hong\r\n\r\n\r\n\ Sources\ used\:\ https\://www.javatpoint.com/java-awt\ \r\n\ https\://www3.ntu.edu.sg/home/ehchua/programming/java/j4a_gui.html\ \r\n\ https\://www.tutorialspoint.com/awt/awt_event_listeners.htm\r\n\ http\://stackoverflow.com/questions/5895829/resizing-image-in-java\ \ \r\n
comment1.params=
comment1.target=Humanities()
comment1.text=\r\n\ The\ constructor\ of\ the\ class\ that\ initializes\ all\ the\ instance\ variables\r\n
comment10.params=e
comment10.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment10.text=\r\n\ Called\ in\ response\ to\ the\ user\ moving\ the\ mouse\ with\ no\ mouse\ buttons\ pressed.\ \r\n\ This\ event\ is\ fired\ by\ the\ component\ that's\ currently\ under\ the\ cursor.\r\n
comment11.params=e
comment11.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment11.text=\r\n\ Invoked\ when\ the\ mouse\ enters\ a\ component.\r\n
comment12.params=e
comment12.target=void\ mouseExited(java.awt.event.MouseEvent)
comment12.text=\r\n\ Invoked\ when\ the\ mouse\ exits\ a\ component.\r\n
comment13.params=e
comment13.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment13.text=\r\n\ Invoked\ when\ the\ mouse\ button\ has\ been\ clicked\ (pressed\ and\ released)\ on\ a\ component.\r\n
comment2.params=
comment2.target=void\ screens()
comment2.text=\r\n\ Method\ that\ creats\ a\ new\ panel\ and\ JFrame\ to\ build\ the\ class\ upon.\r\n\ It\ calls\ upon\ helper\ methods\ in\ order\ to\ create\ the\ panel.\r\n
comment3.params=
comment3.target=void\ images()
comment3.text=\r\n\ This\ methods\ loads\ all\ the\ images\ necessary\ for\ the\ Humanities\ class\ to\ be\ made.\r\n\ There\ are\ two\ imported\ images,\ one\ of\ the\ humanities\ class\ that\ is\ used\ as\ the\ background\r\n\ Another\ for\ the\ riddle\ the\ user/player\ must\ solve.\r\n
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.text=\r\n\ Sets\ the\ frame\ to\ be\ invisible\ and\ calls\ the\ executable\ class\r\n
comment5.params=
comment5.target=void\ labels()
comment5.text=\r\n\ The\ labels\ method\ essentially\ gives\ directions\ on\ the\ class\ of\ what\ the\ user\r\n\ needs\ to\ do\ in\ order\ to\ complete\ the\ class.\r\n
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.text=\r\n\ The\ actionPerformed\ method\ sets\ visibility\r\n\ As\ false\ to\ all\ the\ labels.\r\n
comment7.params=e
comment7.target=void\ mousePressed(java.awt.event.MouseEvent)
comment7.text=\r\n\ The\ method\ mousePressed\ method\ makes\ the\ game\ able\ \r\n\ to\ detect\ the\ location\ of\ where\ the\ user\ clicked\ the\ mouse,\r\n\ essentially\ making\ it\ possible\ to\ see\ whether\ or\ not\ the\ user\ clicked\ \r\n\ the\ picture\ and\ the\ answer\ to\ go\ on\ to\ the\ next\ class.\r\n
comment8.params=e
comment8.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment8.text=\r\n\ The\ mouseReleased\ method\ determines\ whether\ or\ not\ the\ mouse\ button\ \r\n\ was\ released\ right\ after\ it\ was\ clicked.\ This\ is\ crucial\ for\ the\ game\ to\ \r\n\ be\ able\ to\ detect\ whether\ or\ not\ the\ user\ clicked\ on\ the\ answer\ button\ or\ when\ dragging\r\n\ the\ picture\ to\ reveal\ the\ answer.\r\n
comment9.params=e
comment9.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment9.text=\r\n\ The\ mouseDragged\ method\ determines\ whether\ or\ not\ the\ user\ had\r\n\ dragged\ the\ mouse\ around.\ This\ is\ crucial\ to\ detect\ whether\ or\ not\ the\r\n\ picture\ was\ moved\ in\ order\ to\ reveal\ the\ answer.\r\n
numComments=14
